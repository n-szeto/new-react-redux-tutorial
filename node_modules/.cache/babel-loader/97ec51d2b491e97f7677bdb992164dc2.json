{"ast":null,"code":"var _jsxFileName = \"/Users/nsyee/Documents/College/Extracurriculars/Williams Students Online/Projects/taming-the-state-hn-app/src/components/SearchStories.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { doFetchStories } from '../actions/story';\nimport Button from './Button';\n\nconst applyQueryState = query => () => ({\n  query\n});\n\nclass SearchStories extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: ''\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    const query = this.state.query;\n\n    if (query) {\n      this.props.onFetchStories(query);\n      this.setState(applyQueryState(''));\n    }\n\n    event.preventDefault();\n  }\n\n  onChange(event) {\n    const value = event.target.value;\n    this.setState(applyQueryState(value));\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.query,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchStories: query => dispatch(doFetchStories(query))\n});\n\nexport default connect(null, mapDispatchToProps)(SearchStories);","map":{"version":3,"sources":["/Users/nsyee/Documents/College/Extracurriculars/Williams Students Online/Projects/taming-the-state-hn-app/src/components/SearchStories.js"],"names":["React","Component","connect","doFetchStories","Button","applyQueryState","query","SearchStories","constructor","props","state","onChange","bind","onSubmit","event","onFetchStories","setState","preventDefault","value","target","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI,OAAO;AACtCA,EAAAA;AADsC,CAAP,CAAjC;;AAIA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AACpCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,SAAKK,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACD;;AAEDC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AAAA,UACNR,KADM,GACI,KAAKI,KADT,CACNJ,KADM;;AAEd,QAAIA,KAAJ,EAAW;AACT,WAAKG,KAAL,CAAWM,cAAX,CAA0BT,KAA1B;AAEA,WAAKU,QAAL,CAAcX,eAAe,CAAC,EAAD,CAA7B;AACD;;AAEDS,IAAAA,KAAK,CAACG,cAAN;AACD;;AAEDN,EAAAA,QAAQ,CAACG,KAAD,EAAQ;AAAA,UACNI,KADM,GACIJ,KAAK,CAACK,MADV,CACND,KADM;AAEd,SAAKF,QAAL,CAAcX,eAAe,CAACa,KAAD,CAA7B;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,QAAQ,EAAE,KAAKP,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWJ,KAFpB;AAGE,MAAA,QAAQ,EAAE,KAAKK,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANF,CADF;AAYD;;AAzCmC;;AA4CtC,MAAMU,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,cAAc,EAAET,KAAK,IAAIgB,QAAQ,CAACnB,cAAc,CAACG,KAAD,CAAf;AADO,CAAf,CAA3B;;AAIA,eAAeJ,OAAO,CACpB,IADoB,EAEpBmB,kBAFoB,CAAP,CAGbd,aAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { doFetchStories } from '../actions/story';\nimport Button from './Button';\n\nconst applyQueryState = query => () => ({\n  query\n});\n\nclass SearchStories extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: '',\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit(event) {\n    const { query } = this.state;\n    if (query) {\n      this.props.onFetchStories(query)\n\n      this.setState(applyQueryState(''));\n    }\n\n    event.preventDefault();\n  }\n\n  onChange(event) {\n    const { value } = event.target;\n    this.setState(applyQueryState(value));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit}>\n        <input\n          type=\"text\"\n          value={this.state.query}\n          onChange={this.onChange}\n        />\n        <Button type=\"submit\">\n          Search\n        </Button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFetchStories: query => dispatch(doFetchStories(query)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SearchStories);"]},"metadata":{},"sourceType":"module"}